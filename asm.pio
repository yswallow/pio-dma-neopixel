; write neopixel
;   Auto pull : false
;   OSR threshould  : 24bit
.program write_neopixel
.origin 0
    set pins, 0;
    pull;       blocks
bit_loop:
    set pins, 1 [1]; HIGH 3clks
    out pins, 1 [2]; HIGH if 1, LOW if 0, 2clks
    set pins, 0 [5]; LOW 6clks
    jmp !OSRE bit_loop; LOW 1clk

% c-sdk {
#include "hardware/clocks.h"
#include "hardware/gpio.h"

static inline void write_neopixel_program_init(
    PIO pio,
    uint sm,
    uint pin
    )
{
    const uint offset = 0;
    // GPIOの設定
    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    // ステートマシンの設定
    pio_sm_config c = write_neopixel_program_get_default_config(offset);
    
    // OSR shift_right, auto_pull, threshould
    sm_config_set_out_shift(&c, false, false, 24);
    
    sm_config_set_out_pins(&c, pin, 1);
    sm_config_set_set_pins(&c, pin, 1);
    
    // all the FIFOs is TX
    //sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
    sm_config_set_clkdiv(&c, (float)clock_get_hz(clk_sys) / (8000000UL));

    // start state machine
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

%}
